/**********************************************
  Protocol buffers definition for Silo Server
***********************************************/
syntax = "proto3";
package pt.tecnico.sauron.silo.grpc;
import "google/protobuf/timestamp.proto";

/**********
  Defines
***********/
message Location {
  double latitude = 1;
  double longitude = 2;
}

enum Type {
  UNKNOWN = 0;
  PERSON = 1;
  CAR = 2;
}

message ObservedObject {
  Type type = 1;
  string id = 2;
}

message Camera {
  string name = 1;
  Location location = 2;
}

message Observation {
  ObservedObject object = 1;
  Camera camera = 2;
  google.protobuf.Timestamp ts = 3;
}

message Entry {
  int32 key = 1;
  int32 value = 2;
}

message Update {
  oneof option {
    CamJoinRequest camJoin = 1;
    ReportRequest report = 2;
    CtrlInitRequest ctrlInit = 3;
    CtrlClearRequest ctrlClear = 4;
  }
  int32 ID = 5;
  repeated Entry prevTS = 6;
}

/*******************
  CamJoin Messages
********************/
message CamJoinRequest {
  Camera camera = 1;
  repeated Entry prevTS = 2;
}

message CamJoinResponse {
  repeated Entry newTS = 1;
}

/*******************
  CamInfo Messages
********************/
message CamInfoRequest {
  string name = 1;
  repeated Entry prevTS = 2;
}

message CamInfoResponse {
  Location location = 1;
  repeated Entry newTS = 2;
}

/******************
  Report Messages
*******************/
message ReportRequest {
  string camName = 1;
  repeated ObservedObject objects = 2;
  google.protobuf.Timestamp ts = 3;
  repeated Entry prevTS = 4;
}

message ReportResponse {
  repeated Entry newTS = 1;
}

/*****************
  Track Messages
******************/
message TrackRequest {
  ObservedObject object = 1;
  repeated Entry prevTS = 2;
}

message TrackResponse {
  Observation observation = 1;
  repeated Entry newTS = 2;
}

/**********************
  TrackMatch Messages
***********************/
message TrackMatchRequest {
  ObservedObject object = 1;
  repeated Entry prevTS = 2;
}

message TrackMatchResponse {
  repeated Observation observations = 1;
  repeated Entry newTS = 2;
}

/*****************
  Trace Messages
******************/
message TraceRequest {
  ObservedObject Object = 1;
  repeated Entry prevTS = 2;
}

message TraceResponse {
  repeated Observation observations = 1;
  repeated Entry newTS = 2;
}

/********************
  CtrlPing Messages
*********************/
message CtrlPingRequest {
  repeated Entry prevTS = 1;
}

message CtrlPingResponse {
  repeated Camera cameras = 1;
  repeated Observation observations = 2;
  repeated Entry newTS = 3;
}

/*********************
  CtrlClear Messages
**********************/
message CtrlClearRequest {
  repeated Entry prevTS = 1;
}

message CtrlClearResponse {
  repeated Entry newTS = 1;
}

/********************
  CtrlInit Messages
*********************/
message CtrlInitRequest {
  repeated Camera cameras = 1;
  repeated Observation observations = 2;
  repeated Entry prevTS = 3;
}

message CtrlInitResponse {
  repeated Entry newTS = 1;
}

/**************************
  Update Replica Messages
***************************/
message UpdateRequest {
  repeated Entry valueTS = 3;
}

message UpdateResponse {
  repeated Update updates = 1;
}

/*****************
  Sauron Methods
******************/
service Sauron {

  rpc CamJoin(CamJoinRequest) returns (CamJoinResponse);
  rpc CamInfo(CamInfoRequest) returns (CamInfoResponse);
  rpc Report(ReportRequest) returns (ReportResponse);
  rpc Track(TrackRequest) returns (TrackResponse);
  rpc TrackMatch(TrackMatchRequest) returns (TrackMatchResponse);
  rpc Trace(TraceRequest) returns (TraceResponse);
  rpc CtrlPing(CtrlPingRequest) returns (CtrlPingResponse);
  rpc CtrlClear(CtrlClearRequest) returns (CtrlClearResponse);
  rpc CtrlInit(CtrlInitRequest) returns (CtrlInitResponse);
  rpc UpdateReplica(UpdateRequest) returns (UpdateResponse);
}
