Subject: [PATCH 5/6] Passwords Securely Stored in DB
Used SHA512 Algorithm to Hash

---
 facefive/app/model.py               |  8 ++++----
 facefive/app/templates/profile.html |  4 ++--
 facefive/app/views.py               |  3 ++-
 3 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/facefive/app/model.py b/facefive/app/model.py
--- a/facefive/app/model.py
+++ b/facefive/app/model.py
@@ -17,8 +17,8 @@ def init_db():
     cur.execute("DROP TABLE IF EXISTS Users;")
     cur.execute('''CREATE TABLE Users ( 
                     username VARCHAR(20) NOT NULL,
-                    password VARCHAR(20) NOT NULL,
+                    password BINARY(64) NOT NULL,
                     name TEXT,
                     about TEXT,
                     photo varchar(255) DEFAULT '{}',
@@ -119,7 +119,7 @@ def get_user(username):
 def login_user(username, password):
     q = "SELECT * FROM Users"
     q+= " WHERE username = %(username)s"
-    q+= " AND password = %(password)s"
+    q+= " AND password = UNHEX(SHA2(%(password)s, 512))"
     
     logging.debug("login_user query: %s" % q)
     data = get_all_results(q, {'username': username, 'password': password})
@@ -137,7 +137,7 @@ def login_user(username, password):
 ### out: User
 def register_user(username, password):
     q = "INSERT INTO Users (username, password)"
-    q+= " VALUES (%(username)s, %(password)s)"
+    q+= " VALUES (%(username)s, UNHEX(SHA2(%(password)s, 512)))"
 
     logging.debug("register_user query: %s" % q)
     commit_results(q, {'username': username, 'password': password})
@@ -149,7 +149,7 @@ def register_user(username, password):
 ### out: User
 def update_user(username, new_name, new_password, new_about, new_photo):
     q = "UPDATE Users"
-    q+= " SET username = %(username)s, password = %(new_password)s, name = %(new_name)s, about = %(new_about)s, photo = %(new_photo)s"
+    q+= " SET username = %(username)s, password = UNHEX(SHA2(%(new_password)s, 512)), name = %(new_name)s, about = %(new_about)s, photo = %(new_photo)s"
     q+= " WHERE username = %(username)s"
 
     logging.debug("update_user query: %s" % q)
diff --git a/facefive/app/templates/profile.html b/facefive/app/templates/profile.html
--- a/facefive/app/templates/profile.html
+++ b/facefive/app/templates/profile.html
@@ -24,10 +24,10 @@
                     </div>
                     <div class="form-group">
                         <label for="currentpasswordInput">Current Password</label>
-                        <input type="text" name="currentpassword" class="form-control" id="currentpasswordInput" placeholder="" required>
+                        <input type="password" name="currentpassword" class="form-control" id="currentpasswordInput" placeholder="" required>
                     <div class="form-group">
                         <label for="newpasswordInput">New Password</label>
-                        <input type="text" name="newpassword" class="form-control" id="newpasswordInput" placeholder="">
+                        <input type="password" name="newpassword" class="form-control" id="newpasswordInput" placeholder="">
                     </div>
                     <div class="form-group">
                         <label for="aboutInput">About</label>
diff --git a/facefive/app/views.py b/facefive/app/views.py
--- a/facefive/app/views.py
+++ b/facefive/app/views.py
@@ -2,6 +2,7 @@
 from flask_mysqldb import MySQL
 from flask_wtf.csrf import CSRFProtect, CSRFError
 import random, string
+from hashlib import sha512
 
 from __init__ import app, mysql, current_user, csrf
 import model
@@ -200,7 +201,7 @@ def update_profile():
    if not new_password:
       new_password = current_password
 
-   if current_password != current_user.password:
+   if sha512(current_password.encode("UTF-8")).digest() != current_user.password:
       flash("Current password does not match registered password.", 'error')
       return render_template('profile.html', current_user=current_user)
 
-- 
2.25.1

